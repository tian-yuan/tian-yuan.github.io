<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-11T08:42:14.279Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kafka design</title>
    <link href="http://yoursite.com/2017/12/11/kafka-design/"/>
    <id>http://yoursite.com/2017/12/11/kafka-design/</id>
    <published>2017-12-11T06:45:40.000Z</published>
    <updated>2017-12-11T08:42:14.279Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转译：Varnish-架构师笔记"><a href="#转译：Varnish-架构师笔记" class="headerlink" title="转译：Varnish 架构师笔记"></a>转译：Varnish 架构师笔记</h1><blockquote><p>找到这篇文章是在阅读 Kafka 文档时，一个<a href="https://kafka.apache.org/documentation/#persistence" target="_blank" rel="noopener">名为 “Don’t fear the filesystem!”的段落</a>中提到的。文档指出，我们总是思维定势地以为磁盘很慢，内存很快。然而今天的计算机体系结构中，并非这么简单：</p><ul><li>因为操作系统 PageCache 的存在，磁盘操作可能很快</li><li>虽然磁盘 IOPS 难以提高，但吞吐量在不断上升；换句话说，顺序读写磁盘非常快</li><li>CPU Cache 常常被忽略了，了解 CPU Cache 对提升内存读写性能至关重要</li></ul><p><a href="http://varnish-cache.org/docs/trunk/phk/notes.html" target="_blank" rel="noopener">原文链接</a></p></blockquote><p>当你开始深入 Varnish 的源代码后，应该会发觉它与你日常所见的一般应用软件有着明显不同，而这绝非偶然。</p><p>多年以来我的绝大部分时间花费在 FreeBSD 的内核开发上，而每每涉足用户空间编程，却总是毫无例外地发现那里的人们还在以1975年的方式工作。</p><p>所以 Varnish 这个项目一开始并没能激起我很大的兴趣。但我渐渐意识到 Varnish 虽然是一个用户态应用，但却也是一个能充分发挥我长久以来积累的关于硬件和内核的经验知识的理想场所。目前 Varnish 的开发已经进展到alpha版本的阶段，而我觉得应当承认自己相当享受这一段历程。</p><h3 id="1975的编程方式到底出了什么问题？"><a href="#1975的编程方式到底出了什么问题？" class="headerlink" title="1975的编程方式到底出了什么问题？"></a>1975的编程方式到底出了什么问题？</h3><p>简而言之：计算机系统再也不应该被看作是由两个存储层次构成的了。</p><p>首先是主存：从水银延迟线，磁芯存储器，到现在可供随机访问的RAM。</p><p>然后是辅存：从纸带，磁带，到磁盘。最早的磁盘有一屋子大，然后缩小到洗衣机的尺寸，到今天硬盘可以被放进随身携带的 MP3 播放器中。</p><p>于是大家就按照这样的划分，在内存中分配变量，在磁盘中存取数据，以这样的方式进行编程工作。</p><p>还是拿 Squid 这个1975年风格的系统为例：你事先配置它的内存和硬盘用量，然后它会花费大把时间来追踪哪些HTTP对象驻留内存中，哪些存放在硬盘上，并且根据不同情况来调整它们的放置策略。</p><p>然而实际上呢，现今的计算机应被视为只使用一种统一的存储系统，这个系统完全基于硬盘（磁盘，固态硬盘或者其他什么东西），而传统的内存呢，在操作系统内核和虚拟内存硬件机制的帮助下可以被看作是硬盘的缓存。</p><p>回过头来看 Squid 的策略，它精心设计的存储管理机制实际上却陷入了与操作系统内核同样精巧的管理策略的激烈冲突。而就像所有内战一样，这样的冲突必然一事无成。</p><p>我们可以尝试从细节角度来看整个流程：一开始 Squid 会请求内存用来创建了一个 HTTP 对象，它往往会在创建之初被频繁访问多次，然后闲置一段时间。而后当内核接收到其他内存分配请求时，会将这些它认为闲置的内存数据放到硬盘交换分区去，而把这些回收的内存页用于更活跃的任务。在Squid下一次访问这一对象时，操作系统又会把暂存在交换分区的数据取回来供它使用。 这些内核对于内存的操作对于 Squid 是透明的，在它看来这个 HTTP 对象就像从没离开过内存一样，而实际上物理内存页得到了更有效的使用。</p><p>这就是虚拟内存机制。</p><p>如果事情到此为止的话就好了，但接下来1975年式的编程风格就出现了。</p><p>一段时间之后，Squid 也和内核一样注意到了这个对象闲置了，于是打算把它放到硬盘上去，省出一些内存来给更频繁访问的数据使用。所以它打开一个文件把这个对象写了进去。</p><p>打开慢镜头来看这个写入的过程：</p><p>Squid 通过系统调用 write 将 HTTP 对象的虚拟内存地址传递给内核。<br>由于物理页已经被内核交换出去，这个内存访问将引发一个缺页中断。<br>为了重新载入这个内存页，内核不得不交换出另一个正在使用的内存页（很可能包含另一 Squid 的对象），修复页表，然后继续执行系统调用。<br>Squid 对这些一无所知，它自以为只是进行了一次再普通不过的访存操作而已。</p><p>接下来 Squid 可以终于拿这块内存放别的数据了。而当这个对象再次被访问到时，Squid 又不得不把它从硬盘中取回来。首先它需要空闲的内存来存放这个对象，于是它根据某种淘汰算法选中另一个最近不常用的对象，把它写到硬盘上去（上面那些步骤重演了一遍）。然后打开文件读出这次所需的那个对象，最后通过网络套接字发送出去。</p><p>这一切显然充满了各种无用功。</p><p>让我们看看 Varnish 是怎么做的</p><p>Varnish 会直接请求大块虚拟内存，并由操作系统将这个内存空间映射到一个硬盘文件。当需要访问某个 HTTP 对象时，只需要正确索引这个对象相应的虚拟内存地址，剩下的交给操作系统就好了。当内核需要回收一些内存页时，它会自行决定将一些 Varnish 的内存数据写回到映射的文件中。而当 Varnish 再次访问这一块虚拟内存时，内核自然会腾出内存页来将文件中的数据读回使用。</p><p>仅此而已。</p><p>Varnish 不去尝试控制哪些数据应该被缓存在内存中，哪些应该放到硬盘上去。内核代码和硬件会处理这些事情，而且处理得很漂亮。</p><p>此外，与 Squid 不同的是 Varnish 只需要一个文件而不是为每个 HTTP 对象创建单独的文件。没有任何理由需要在 HTTP 对象和文件系统对象间建立一一对应的关系，也没有理由把时间浪费在文件系统的命名空间处理上。Varnish 需要处理的只是虚拟内存的指针和所需对象的长度值而已。</p><p>虚拟内存的出现为数据大于物理内存的场景提供了一种便利的机制，但人们似乎并没有领悟这一点。</p><h3 id="更多的缓存"><a href="#更多的缓存" class="headerlink" title="更多的缓存"></a>更多的缓存</h3><p>CPU 的时钟频率目前看来基本止步于4GHz了。即便如此，为了避免内存读写的瓶颈，硬件工程师们不得不使用使用一级，二级，有时候甚至是三级 CPU cache（现在我们可以认为 RAM 是第四级缓存了），此外还有写缓冲，流水线，页模式读取等各种技术，而这些都是为了加快访存来匹配CPU的处理速度。</p><p>虽然时钟频率方面受限，但硅工艺的进步缩小了器件尺寸，集成了更多的晶体管。所以多核 CPU 的设计逐渐成为主流，但这从编程模型角度看来实在是很糟糕的一件事。</p><p>虽然多核系统存在已久，但编写能够利用上多个 CPU 的代码依然是一件棘手的事。而要在多核系统上写出高性能的程序就更是如此了。</p><p>比如我们有两个计数器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unsigned n_foo;</span><br><span class="line">unsigned n_bar;</span><br></pre></td></tr></table></figure><p>在一个 CPU 上执行了 <code>n_foo++</code> 的操作会使得CPU读取 <code>n_foo</code> 的值然后写回。</p><p>读取一个内存位置首先会检查它是否在 CPU L1 cache 中命中，这挺难的除非它刚刚被使用过。接下来是 L2 cache，我们不妨假设依然没有命中吧。</p><p>如果是在一个单核系统上，CPU 会去内存读取数据然后就完事。但在多核系统中，我们必须去检查其他CPU核心是否缓存并修改了 <code>n_foo</code> 的数值。我们会发起一个特殊的总线事务做这种检查，如果其他 CPU 答复说它确实持有这样一份拷贝，它就需要将它写回到内存中。如果硬件设计良好，我们可能可以通过总线监听获得这份新数据，不然的话就需要去内存里读取它。</p><p>我们终于可以修改 <code>n_foo</code> 的值了，但其实修改完了之后一般不会直接将它写回到内存中。为了之后操作的快速存取，很可能我们会把它缓存起来。</p><p>现在假设另一个 CPU 需要执行 <code>n_bar++</code> 的操作，它能够直接进行吗？答案是否定的。因为缓存的单位并不是字节而是 cache-line（典型值是 8-128 个字节）。所以当第一个 CPU 忙着处理 <code>n_foo</code> 时，第二个 CPU 必须等待，因为虽然它想获取的是另一个变量，但却不幸落在了同一个 cache-line 中。</p><p>明白了吧？没错，这有点丑。</p><h3 id="我们该怎么办"><a href="#我们该怎么办" class="headerlink" title="我们该怎么办"></a>我们该怎么办</h3><p><strong>尽一切可能，减少内存操作。</strong></p><p>下面是 Varnish 的一些做法。</p><p>当需要处理一个 HTTP 请求或响应时，我们会持有一组指针和一个内存工作区。我们并不需要在处理每个 HTTP 报头时都调用 malloc，而是一次性分配整个工作区的内存，然后按需从中获取所需空间。而当我们一次性释放全部报头时，只要将指针重置到工作区的起始位置即可。</p><p>当需要将 HTTP 报头从一个请求拷贝到另一个请求（或从从一个响应复制到另一个响应）时，并不需要进行字符串拷贝，而只要拷贝指针。如果源报头在这个过程中不会被不释放或改写，这样做是非常安全的。比如从客户端请求到后台请求的拷贝就是这样一个例子。</p><p>但在一些新构建的报头生命周期长于源报头的场景中，就需要另外分配内存了。例如当我们会缓存新 HTTP 对象时，首先就计算整个报头所需空间，然后通过一次 malloc 调用来获取内存。</p><p>另外我们会尽可能重用那些正被缓存的内存数据。</p><p>比如 Varnish 的 worker 线程是以<em>最近最忙的</em>方式调度的，也即是说一个 worker 线程空闲后会被放回到队列的最前端，使得它更有机会马上去处理下一个新请求，这样它的数据，栈空间和变量等很可能可以在 CPU 缓存中被重用，而不是再次从RAM中读取。</p><p>同时对于 worker 线程经常使用的数据，我们会把它们分配在每个线程的栈变量中，并且确保它们占据完整的内存页。这样我们就可以尽可能避免 cache-line 的竞争。</p><p>如果对你来说这些听起来都很陌生，我可以告诉你它们是确实有效的：Varnish 处理一个命中缓存的请求最多只需18个系统调用，而且其中不少只是为了获得时间戳来满足统计的需要。</p><p>这些技术并不新鲜，我们已经在内核开发中使用了10多年，现在该轮到你们来学习了:-)</p><p>如此，欢迎进入 Varnish，一个 2006风格架构的程序。</p><blockquote><p>Linux cache reference : <a href="https://www.ibm.com/developerworks/cn/linux/l-cache/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cache/index.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;转译：Varnish-架构师笔记&quot;&gt;&lt;a href=&quot;#转译：Varnish-架构师笔记&quot; class=&quot;headerlink&quot; title=&quot;转译：Varnish 架构师笔记&quot;&gt;&lt;/a&gt;转译：Varnish 架构师笔记&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;找
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kafka</title>
    <link href="http://yoursite.com/2017/12/11/kafka/"/>
    <id>http://yoursite.com/2017/12/11/kafka/</id>
    <published>2017-12-11T03:16:36.000Z</published>
    <updated>2017-12-11T03:31:34.102Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kafka-internal"><a href="#kafka-internal" class="headerlink" title="kafka internal"></a>kafka internal</h3><h3 id="kafka-operator"><a href="#kafka-operator" class="headerlink" title="kafka operator"></a>kafka operator</h3><ul><li>list kafka brokers</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tianyuan# ./bin/zookeeper-shell.sh localhost:2181/kafpush &lt;&lt;&lt; &quot;ls /brokers/ids&quot;</span><br><span class="line">Connecting to localhost:2181/kafpush</span><br><span class="line">Welcome to ZooKeeper!</span><br><span class="line">JLine support is disabled</span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br><span class="line">[3, 2, 1]</span><br></pre></td></tr></table></figure><blockquote><p>注意： ./bin/zookeeper-shell.sh localhost:2181 会连接到kafka所在的zk集群</p></blockquote><ul><li>create topic</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kafka-topics.sh --create --zookeeper localhost:2181/kafpush --replication-factor 1 --partitions 300 --topic test</span><br></pre></td></tr></table></figure><ul><li>alter topic partitions</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/kafka-topics.sh --alter --zookeeper localhost:2181/kafpush --partitions 300 --topic test</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;kafka-internal&quot;&gt;&lt;a href=&quot;#kafka-internal&quot; class=&quot;headerlink&quot; title=&quot;kafka internal&quot;&gt;&lt;/a&gt;kafka internal&lt;/h3&gt;&lt;h3 id=&quot;kafka-operator&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>pipework demo</title>
    <link href="http://yoursite.com/2017/12/07/pipework-demo/"/>
    <id>http://yoursite.com/2017/12/07/pipework-demo/</id>
    <published>2017-12-07T12:58:07.000Z</published>
    <updated>2017-12-08T10:57:01.009Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pipework-demo"><a href="#pipework-demo" class="headerlink" title="pipework demo"></a>pipework demo</h3><p>主机A地址为10.10.101.105/24,网关为10.10.101.254,需要给Docker容器的地址配置为10.10.101.150/24。在主机A上做如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#安装pipework</span><br><span class="line">git clone https://github.com/jpetazzo/pipework</span><br><span class="line">cp ~/pipework/pipework /usr/local/bin/</span><br><span class="line">#启动Docker容器。</span><br><span class="line">docker run -itd --name test1 ubuntu /bin/bash</span><br><span class="line">#配置容器网络，并连到网桥br0上。网关在IP地址后面加@指定。</span><br><span class="line">#若主机环境中存在dhcp服务器，也可以通过dhcp的方式获取IP</span><br><span class="line">#pipework br0 test1 dhcp</span><br><span class="line">pipework br0 test1 10.10.101.150/24@10.10.101.254</span><br><span class="line">#将主机eth0桥接到br0上，并把eth0的IP配置在br0上。这里由于是远程操作，中间网络会断掉，所以放在一条命令中执行。</span><br><span class="line">#将主机eth0桥接到br0上，eth0就成了虚拟网桥br0的一部分。</span><br><span class="line">ip addr add 10.10.101.105/24 dev br0; \</span><br><span class="line">    ip addr del 10.10.101.105/24 dev eth0; \</span><br><span class="line">    brctl addif br0 eth0; \</span><br><span class="line">    ip route del default; \</span><br><span class="line">    ip route add default gw 10.10.101.254 dev br0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#创建br0网桥</span><br><span class="line">#若ovs开头，则创建OVS网桥 ovs-vsctl add-br ovs*</span><br><span class="line">#IFNAME=br0</span><br><span class="line">brctl addbr $IFNAME</span><br><span class="line">#创建veth pair,用于连接容器和br0</span><br><span class="line">#LOCAL_IFNAME=eh0 GUEST_IFNAME=eth1</span><br><span class="line">ip link add name $LOCAL_IFNAME mtu $MTU type veth peer name $GUEST_IFNAME mtu $MTU</span><br><span class="line">#找到Docker容器test1在主机上的PID,创建容器网络命名空间的软连接</span><br><span class="line">#GUESTNAME=test1</span><br><span class="line">DOCKERPID=$(docker inspect --format=&apos;&#123;&#123; .State.Pid &#125;&#125;&apos; $GUESTNAME)</span><br><span class="line">ln -s /proc/$NSPID/ns/net /var/run/netns/$NSPID</span><br><span class="line">#将veth pair一端放入Docker容器中，并设置正确的名字eth1</span><br><span class="line">#CONTAINER_IFNAME=eth1</span><br><span class="line">#把$GUEST_IFNAME添加到$NSPID网络命名空间中，也就是虚拟网络环境</span><br><span class="line">ip link set $GUEST_IFNAME netns $NSPID</span><br><span class="line">ip netns exec $NSPID ip link set $GUEST_IFNAME name $CONTAINER_IFNAME</span><br><span class="line">#将veth pair另一端加入网桥</span><br><span class="line">#若为OVS网桥则为 ovs-vsctl add-port $IFNAME $LOCAL_IFNAME $&#123;VLAN:+&quot;tag=$VLAN&quot;&#125;</span><br><span class="line">brctl addif $IFNAME $LOCAL_IFNAME</span><br><span class="line">#为新增加的容器配置IP和路由</span><br><span class="line">#GATEWAY=10.10.101.254</span><br><span class="line">ip netns exec $NSPID ip addr add $IPADDR dev $CONTAINER_IFNAME</span><br><span class="line">ip netns exec $NSPID ip link set $CONTAINER_IFNAME up</span><br><span class="line">ip netns exec $NSPID ip route delete default</span><br><span class="line">ip netns exec $NSPID ip route add $GATEWAY/32 dev $CONTAINER_IFNAME</span><br></pre></td></tr></table></figure><ol><li>首先pipework检查是否存在br0网桥，若不存在，就自己创建。若以”ovs”开头，就会创建OpenVswitch网桥，以”br”开头，创建Linux bridge。</li><li>创建veth pair设备，用于为容器提供网卡并连接到br0网桥。</li><li>使用docker inspect找到容器在主机中的PID，然后通过PID将容器的网络命名空间链接到/var/run/netns/目录下。这么做的目的是，方便在主机上使用ip netns命令配置容器的网络。因为，在Docker容器中，我们没有权限配置网络环境。</li><li>将之前创建的veth pair设备分别加入容器和网桥中。在容器中的名称默认为eth1，可以通过pipework的-i参数修改该名称。</li><li>然后就是配置新网卡的IP。若在IP地址的后面加上网关地址，那么pipework会重新配置默认路由。这样容器通往外网的流量会经由新配置的eth1出去，而不是通过eth0和docker0。(若想完全抛弃自带的网络设置，在启动容器的时候可以指定–net=none)</li></ol><h1 id="ip-netns相关命令"><a href="#ip-netns相关命令" class="headerlink" title="ip netns相关命令"></a>ip netns相关命令</h1><ul><li>增加虚拟网络命名空间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns add net0</span><br></pre></td></tr></table></figure><ul><li>显示所有的虚拟网络命名空间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EULER:~ # ip netns list</span><br><span class="line"></span><br><span class="line">net0</span><br></pre></td></tr></table></figure><p>也可通过查看/var/run/netns目录下的文件来list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EULER:~ # ls /var/run/netns/</span><br><span class="line"></span><br><span class="line">net0</span><br></pre></td></tr></table></figure><ul><li>进入虚拟机网络环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 `command`</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">如</span><br><span class="line"></span><br><span class="line">EULER:~ # ip netns exec net0 bash  #打开虚拟网络环境net0的bash窗口</span><br><span class="line"></span><br><span class="line">EULER:~ # ip addr #显示所有虚拟网络环境的设备</span><br><span class="line"></span><br><span class="line">EULER:~ # exit #退出该网络虚拟环境</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ul><li>增加一对veth虚拟网卡</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EULER:~ # ip link add type veth</span><br></pre></td></tr></table></figure><ul><li>将veth0添加到net0虚拟网络环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set veth0 netns net0</span><br></pre></td></tr></table></figure><ul><li>将虚拟网卡veth1改名并添加到net1虚拟网络环境中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set dev veth1 name net1-bridge netns net1</span><br></pre></td></tr></table></figure><ul><li>设置虚拟网络环境net0的veth0设备处于激活状态</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 ip link set veth0 up</span><br></pre></td></tr></table></figure><ul><li>为虚拟网络环境net0的veth0设备增加IP地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 ip address add 10.0.1.1/24 dev veth0</span><br></pre></td></tr></table></figure><h3 id="在操作过程中遇到的问题"><a href="#在操作过程中遇到的问题" class="headerlink" title="在操作过程中遇到的问题"></a>在操作过程中遇到的问题</h3><ul><li><p>添加路由时的错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip route add default gw 10.211.55.1 dev eth0</span><br><span class="line">Error: either &quot;to&quot; is duplicate, or &quot;gw&quot; is a garbage.</span><br></pre></td></tr></table></figure><p>需要修改成：</p><p>ip route add 10.221.55.0/24 via 10.211.55.1 dev eth0</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;pipework-demo&quot;&gt;&lt;a href=&quot;#pipework-demo&quot; class=&quot;headerlink&quot; title=&quot;pipework demo&quot;&gt;&lt;/a&gt;pipework demo&lt;/h3&gt;&lt;p&gt;主机A地址为10.10.101.105/24,网关为
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ansible 通过跳板机管理远程服务器</title>
    <link href="http://yoursite.com/2017/12/07/ansible-%E9%80%9A%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E7%AE%A1%E7%90%86%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2017/12/07/ansible-通过跳板机管理远程服务器/</id>
    <published>2017-12-07T01:52:19.000Z</published>
    <updated>2017-12-07T02:09:40.629Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li>mac笔记本</li><li>跳板机：jump.example.com</li><li>被管理节点：node1.example.com, node2.example.com, node3.example.com</li></ul><p>mac 笔记本无法直接连接被管理节点，需要通过跳板机进行管理；</p><h3 id="修改ssh-config"><a href="#修改ssh-config" class="headerlink" title="修改ssh config"></a>修改ssh config</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host node1.example.com node2.example.com node3.example.com</span><br><span class="line">    ForwardAgent yes</span><br><span class="line">    User user</span><br><span class="line">    Port 22</span><br><span class="line">    IdentityFile ~/.ssh/net_id_rsa</span><br><span class="line">    ProxyCommand ssh -qaY -i ~/.ssh/net_id_rsa -p 1046 user@jump.example.com &apos;nc -w 14400 %h %p&apos;</span><br></pre></td></tr></table></figure><blockquote><p>注意：我这边从跳板机到被管理节点和mac到跳板机的私钥是一样的，都是 net_id_rsa</p><p>如果不一样，需要修改 IdentityFile 和 ProxyCommand 的 -i 参数</p><p>IdentityFile是跳板机登陆被管理节点使用的私钥文件，ProxyCommand -i 参数使用的私钥是mac登陆跳板机所使用的私钥</p></blockquote><h3 id="修改ansible-inventory"><a href="#修改ansible-inventory" class="headerlink" title="修改ansible inventory"></a>修改ansible inventory</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">host file:</span><br><span class="line">[node]</span><br><span class="line">node1 ansible_host=node1.example.com</span><br><span class="line">node2 ansible_host=node2.example.com</span><br><span class="line">node3 ansible_host=node3.example.com</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible -i host -m ping</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;环境信息&quot;&gt;&lt;a href=&quot;#环境信息&quot; class=&quot;headerlink&quot; title=&quot;环境信息&quot;&gt;&lt;/a&gt;环境信息&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;mac笔记本&lt;/li&gt;
&lt;li&gt;跳板机：jump.example.com&lt;/li&gt;
&lt;li&gt;被管理节点：node
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>consul deploy</title>
    <link href="http://yoursite.com/2017/12/05/consul-deploy/"/>
    <id>http://yoursite.com/2017/12/05/consul-deploy/</id>
    <published>2017-12-05T08:21:16.000Z</published>
    <updated>2017-12-05T08:37:42.461Z</updated>
    
    <content type="html"><![CDATA[<h3 id="consul-集群部署"><a href="#consul-集群部署" class="headerlink" title="consul 集群部署"></a>consul 集群部署</h3><h4 id="从consul-github-clone-工程"><a href="#从consul-github-clone-工程" class="headerlink" title="从consul github clone 工程"></a>从consul github clone 工程</h4><p>~/src/github.com/hashicorp/consul</p><h4 id="修改-Vagrantfile-文件"><a href="#修改-Vagrantfile-文件" class="headerlink" title="修改 Vagrantfile 文件"></a>修改 Vagrantfile 文件</h4><p>~/src/github.com/hashicorp/consul/demo/vagrant-cluster/Vagrantfile</p><p>在最后增加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config.vm.define &quot;n3&quot; do |n3|</span><br><span class="line">      n3.vm.hostname = &quot;n3&quot;</span><br><span class="line">      n3.vm.network &quot;private_network&quot;, ip: &quot;172.20.20.12&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h4><p>使用vagrant up启动虚拟机</p><h4 id="部署信息"><a href="#部署信息" class="headerlink" title="部署信息"></a>部署信息</h4><table><thead><tr><th>HostName</th><th>IP Address</th><th>Consul Role</th></tr></thead><tbody><tr><td>n1</td><td>172.20.20.10</td><td>bootstrap consul server</td></tr><tr><td>n2</td><td>172.20.20.11</td><td>server</td></tr><tr><td>n3</td><td>172.20.20.12</td><td>client</td></tr></tbody></table><p>n1 config: /etc/consul.d/bootstrap/config.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"bootstrap"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"node_name"</span>: <span class="string">"ageng_one"</span>,</span><br><span class="line">    <span class="attr">"bind_addr"</span>: <span class="string">"172.20.20.10"</span>,</span><br><span class="line">    <span class="attr">"client_addr"</span>: <span class="string">"172.20.20.10"</span>,</span><br><span class="line">    <span class="attr">"datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">    <span class="attr">"data_dir"</span>: <span class="string">"/tmp/consul"</span>,</span><br><span class="line">    <span class="attr">"encrypt"</span>: <span class="string">"6MmrecCBuJMePdP2tOBDxw=="</span>,</span><br><span class="line">    <span class="attr">"log_level"</span>: <span class="string">"INFO"</span>,</span><br><span class="line">    <span class="attr">"enable_script_checks"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"enable_syslog"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>n2 config: /etc/consul.d/server/config.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"bootstrap"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">    <span class="attr">"node_name"</span>: <span class="string">"agent_two"</span>,</span><br><span class="line">    <span class="attr">"bind_addr"</span>: <span class="string">"172.20.20.11"</span>,</span><br><span class="line">    <span class="attr">"client_addr"</span>: <span class="string">"172.20.20.11"</span>,</span><br><span class="line">    <span class="attr">"data_dir"</span>: <span class="string">"/tmp/consul"</span>,</span><br><span class="line">    <span class="attr">"encrypt"</span>: <span class="string">"6MmrecCBuJMePdP2tOBDxw=="</span>,</span><br><span class="line">    <span class="attr">"log_level"</span>: <span class="string">"INFO"</span>,</span><br><span class="line">    <span class="attr">"enable_syslog"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"enable_script_checks"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"start_join"</span>: [<span class="string">"172.20.20.11"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>n3 config: /etc/consul.d/client/config.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">    <span class="attr">"node_name"</span>: <span class="string">"agent_three"</span>,</span><br><span class="line">    <span class="attr">"bind_addr"</span>: <span class="string">"172.20.20.12"</span>,</span><br><span class="line">    <span class="attr">"client_addr"</span>: <span class="string">"172.20.20.12"</span>,</span><br><span class="line">    <span class="attr">"data_dir"</span>: <span class="string">"/tmp/consul"</span>,</span><br><span class="line">    <span class="attr">"encrypt"</span>: <span class="string">"6MmrecCBuJMePdP2tOBDxw=="</span>,</span><br><span class="line">    <span class="attr">"log_level"</span>: <span class="string">"INFO"</span>,</span><br><span class="line">    <span class="attr">"enable_syslog"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"enable_script_checks"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"start_join"</span>: [<span class="string">"172.20.20.10"</span>, <span class="string">"172.20.20.11"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="启动consul服务"><a href="#启动consul服务" class="headerlink" title="启动consul服务"></a>启动consul服务</h4><p>n1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">consul agent -config-dir=/etc/consul.d/bootstrap/</span><br></pre></td></tr></table></figure></p><p>n2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">consul agent -config-dir=/etc/consul.d/server/</span><br></pre></td></tr></table></figure></p><p>n3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">consul agent -config-dir=/etc/consul.d/client/</span><br></pre></td></tr></table></figure></p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>使用vagrant登陆任意一个虚拟机：<br>vagrant ssh n3</p><ul><li>验证节点信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vagrant@n3:~$ consul members -http-addr=172.20.20.11:8500</span><br><span class="line">Node         Address            Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">ageng_one    172.20.20.10:8301  alive   server  1.0.1  2         dc1  &lt;all&gt;</span><br><span class="line">agent_two    172.20.20.11:8301  alive   server  1.0.1  2         dc1  &lt;all&gt;</span><br><span class="line">agent_three  172.20.20.12:8301  alive   client  1.0.1  2         dc1  &lt;default&gt;</span><br></pre></td></tr></table></figure><ul><li>注册服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">curl --request PUT --data @payload.json http://172.20.20.11:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line">payload.json:</span><br><span class="line">&#123;</span><br><span class="line">  &quot;ID&quot;: &quot;redis2&quot;,</span><br><span class="line">  &quot;Name&quot;: &quot;redis&quot;,</span><br><span class="line">  &quot;Tags&quot;: [</span><br><span class="line">    &quot;primary&quot;,</span><br><span class="line">    &quot;v1&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;Address&quot;: &quot;172.20.20.11&quot;,</span><br><span class="line">  &quot;Port&quot;: 8000,</span><br><span class="line">  &quot;EnableTagOverride&quot;: false,</span><br><span class="line">  &quot;Check&quot;: &#123;</span><br><span class="line">    &quot;DeregisterCriticalServiceAfter&quot;: &quot;90m&quot;,</span><br><span class="line">    &quot;Args&quot;: [&quot;/usr/local/bin/check_redis.py&quot;],</span><br><span class="line">    &quot;HTTP&quot;: &quot;http://www.baidu.com&quot;,</span><br><span class="line">    &quot;Interval&quot;: &quot;10s&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查询服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">vagrant@n3:~$ curl http://172.20.20.12:8500/v1/health/service/redis?pretty</span><br><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">       &quot;Node&quot;: &#123;</span><br><span class="line">           &quot;ID&quot;: &quot;73653e92-b66b-04c6-40d5-0339226c9797&quot;,</span><br><span class="line">           &quot;Node&quot;: &quot;agent_two&quot;,</span><br><span class="line">           &quot;Address&quot;: &quot;172.20.20.11&quot;,</span><br><span class="line">           &quot;Datacenter&quot;: &quot;dc1&quot;,</span><br><span class="line">           &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">               &quot;lan&quot;: &quot;172.20.20.11&quot;,</span><br><span class="line">               &quot;wan&quot;: &quot;172.20.20.11&quot;</span><br><span class="line">           &#125;,</span><br><span class="line">           &quot;Meta&quot;: &#123;</span><br><span class="line">               &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">           &#125;,</span><br><span class="line">           &quot;CreateIndex&quot;: 691,</span><br><span class="line">           &quot;ModifyIndex&quot;: 692</span><br><span class="line">       &#125;,</span><br><span class="line">       &quot;Service&quot;: &#123;</span><br><span class="line">           &quot;ID&quot;: &quot;redis2&quot;,</span><br><span class="line">           &quot;Service&quot;: &quot;redis&quot;,</span><br><span class="line">           &quot;Tags&quot;: [</span><br><span class="line">               &quot;primary&quot;,</span><br><span class="line">               &quot;v1&quot;</span><br><span class="line">           ],</span><br><span class="line">           &quot;Address&quot;: &quot;172.20.20.11&quot;,</span><br><span class="line">           &quot;Port&quot;: 8000,</span><br><span class="line">           &quot;EnableTagOverride&quot;: false,</span><br><span class="line">           &quot;CreateIndex&quot;: 692,</span><br><span class="line">           &quot;ModifyIndex&quot;: 692</span><br><span class="line">       &#125;,</span><br><span class="line">       &quot;Checks&quot;: [</span><br><span class="line">           &#123;</span><br><span class="line">               &quot;Node&quot;: &quot;agent_two&quot;,</span><br><span class="line">               &quot;CheckID&quot;: &quot;serfHealth&quot;,</span><br><span class="line">               &quot;Name&quot;: &quot;Serf Health Status&quot;,</span><br><span class="line">               &quot;Status&quot;: &quot;passing&quot;,</span><br><span class="line">               &quot;Notes&quot;: &quot;&quot;,</span><br><span class="line">               &quot;Output&quot;: &quot;Agent alive and reachable&quot;,</span><br><span class="line">               &quot;ServiceID&quot;: &quot;&quot;,</span><br><span class="line">               &quot;ServiceName&quot;: &quot;&quot;,</span><br><span class="line">               &quot;ServiceTags&quot;: [],</span><br><span class="line">               &quot;Definition&quot;: &#123;&#125;,</span><br><span class="line">               &quot;CreateIndex&quot;: 691,</span><br><span class="line">               &quot;ModifyIndex&quot;: 691</span><br><span class="line">           &#125;</span><br><span class="line">       ]</span><br><span class="line">  &#125; </span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>注意这个是查询全局服务列表，如果使用 curl <a href="http://172.20.20.12:8500/v1/agent/services" target="_blank" rel="noopener">http://172.20.20.12:8500/v1/agent/services</a> 进行查询，只能查询当前agent管理的services</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;consul-集群部署&quot;&gt;&lt;a href=&quot;#consul-集群部署&quot; class=&quot;headerlink&quot; title=&quot;consul 集群部署&quot;&gt;&lt;/a&gt;consul 集群部署&lt;/h3&gt;&lt;h4 id=&quot;从consul-github-clone-工程&quot;&gt;&lt;a h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux mysql</title>
    <link href="http://yoursite.com/2017/12/04/linux-mysql/"/>
    <id>http://yoursite.com/2017/12/04/linux-mysql/</id>
    <published>2017-12-04T07:39:38.000Z</published>
    <updated>2017-12-04T07:41:52.642Z</updated>
    
    <content type="html"><![CDATA[<h3 id="How-to-start-or-stop-mysql-on-macos"><a href="#How-to-start-or-stop-mysql-on-macos" class="headerlink" title="How to start or stop mysql on macos"></a>How to start or stop mysql on macos</h3><p>There are different cases depending on whether you installed MySQL with the official binary installer, using MacPorts, or using Homebrew:</p><ul><li>MacPorts</li></ul><p>sudo launchctl unload -w /Library/LaunchDaemons/org.macports.mysql.plist<br>sudo launchctl load -w /Library/LaunchDaemons/org.macports.mysql.plist<br>Note: this is persistent after reboot.</p><ul><li>Homebrew</li></ul><p>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist<br>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</p><ul><li>Binary installer</li></ul><p>sudo /Library/StartupItems/MySQLCOM/MySQLCOM stop<br>sudo /Library/StartupItems/MySQLCOM/MySQLCOM start<br>sudo /Library/StartupItems/MySQLCOM/MySQLCOM restart</p><blockquote><p>in my mac os, the command is :</p></blockquote><p>sudo launchctl unload -w /Library/LaunchDaemons/com.oracle.oss.mysql.mysqld.plist</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;How-to-start-or-stop-mysql-on-macos&quot;&gt;&lt;a href=&quot;#How-to-start-or-stop-mysql-on-macos&quot; class=&quot;headerlink&quot; title=&quot;How to start or stop m
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring mvc</title>
    <link href="http://yoursite.com/2017/11/30/spring-mvc/"/>
    <id>http://yoursite.com/2017/11/30/spring-mvc/</id>
    <published>2017-11-30T13:00:22.000Z</published>
    <updated>2017-12-01T02:02:30.110Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建Spring-Mvc项目"><a href="#创建Spring-Mvc项目" class="headerlink" title="创建Spring Mvc项目"></a>创建Spring Mvc项目</h2><ul><li>使用Intellij ide，创建一个空项目；</li><li>添加一个module，maven simple app模版；</li><li>增加spring framework支持；</li><li>最终project struct如下：<br><img src="/2017/11/30/spring-mvc/project-struct.png" alt="project struct"></li></ul><h2 id="代码列表"><a href="#代码列表" class="headerlink" title="代码列表"></a>代码列表</h2><h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class="line"><span class="meta"> "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span><br><span class="line"><span class="meta"> "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:dispatcher-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:dispatcher-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 context-param 中指定了配置加载的路径；</p><h3 id="dispatcher-servlet-xml"><a href="#dispatcher-servlet-xml" class="headerlink" title="dispatcher-servlet.xml"></a>dispatcher-servlet.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"controller"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中注意 xsi:schemaLocation，context:component-scan依赖与 <a href="http://www.springframework.org/schema/context/spring-context.xsd" target="_blank" rel="noopener">http://www.springframework.org/schema/context/spring-context.xsd</a><br>如果不添加，会报无法解析xml的错误；</p><h3 id="MainController"><a href="#MainController" class="headerlink" title="MainController"></a>MainController</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package controller;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by tianyuan on 2017/11/30.</span><br><span class="line"> */</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(value = &quot;/&quot;)</span><br><span class="line">public class MainController &#123;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(method = RequestMethod.GET)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String welcome() &#123;</span><br><span class="line">        return &quot;hello world main controller&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="spring-mvc-原理分析"><a href="#spring-mvc-原理分析" class="headerlink" title="spring mvc 原理分析"></a>spring mvc 原理分析</h3><p>tomcat 在启动时会解析 web.xml 文件，web.xml就是入口；</p><p>web.xml 中的 listener： org.springframework.web.context.ContextLoaderListener 会加载beans，解析annotation等；</p><p>其中context-param中的classpath，指classes文件夹路径，可以从编译后的target目录可以看出，编译和部署后的文件目录信息；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建Spring-Mvc项目&quot;&gt;&lt;a href=&quot;#创建Spring-Mvc项目&quot; class=&quot;headerlink&quot; title=&quot;创建Spring Mvc项目&quot;&gt;&lt;/a&gt;创建Spring Mvc项目&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用Intellij ide，创
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>create blog</title>
    <link href="http://yoursite.com/2017/11/29/create-blog/"/>
    <id>http://yoursite.com/2017/11/29/create-blog/</id>
    <published>2017-11-29T02:01:32.000Z</published>
    <updated>2017-11-29T02:35:16.176Z</updated>
    
    <content type="html"><![CDATA[<h3 id="How-to-create-your-blog-in-three-step"><a href="#How-to-create-your-blog-in-three-step" class="headerlink" title="How to create your blog in three step"></a>How to create your blog in three step</h3><ul><li>first should install nodejs/git</li><li>install hexo, <a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></li><li>use theme next, <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></li><li>start your blog</li></ul><h3 id="the-blog-is-look-like"><a href="#the-blog-is-look-like" class="headerlink" title="the blog is look like"></a>the blog is look like</h3><p><img src="/2017/11/29/create-blog/create-blog-main-page.png" alt="main page"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;How-to-create-your-blog-in-three-step&quot;&gt;&lt;a href=&quot;#How-to-create-your-blog-in-three-step&quot; class=&quot;headerlink&quot; title=&quot;How to create your
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/11/29/hello-world/"/>
    <id>http://yoursite.com/2017/11/29/hello-world/</id>
    <published>2017-11-29T01:50:32.274Z</published>
    <updated>2017-11-29T01:50:32.274Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
